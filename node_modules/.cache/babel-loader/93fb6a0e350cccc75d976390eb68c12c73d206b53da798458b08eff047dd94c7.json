{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Contact Details\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Contact not found or loading...\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Only display contact details if contact is not null \"), $data.contact ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Name: \" + _toDisplayString($data.contact.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString($data.contact.email), 1 /* TEXT */), _createCommentVNode(\" Display other details like address, phone, category \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5]))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_4","_createElementBlock","_hoisted_1","_createCommentVNode","$data","contact","_hoisted_2","_toDisplayString","name","email","_hoisted_3","_hoisted_5"],"sources":["C:\\Users\\regev\\contact-manager\\src\\components\\ContactDetails.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Contact Details</h1>\r\n    <!-- Only display contact details if contact is not null -->\r\n    <div v-if=\"contact\">\r\n      <p>Name: {{ contact.name }}</p>\r\n      <p>Email: {{ contact.email }}</p>\r\n      <!-- Display other details like address, phone, category -->\r\n    </div>\r\n    <div v-else>\r\n      <p>Contact not found or loading...</p>\r\n    </div>\r\n  </div>\r\n  </template>\r\n\r\n  \r\n  <script>\r\n  import { fetchContacts } from '@/utils/storage'; // Adjust the path as necessary\r\n  \r\n  export default {\r\n    name: 'ContactDetails',\r\n    data() {\r\n      return {\r\n        contact: null // Initialize contact as null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.loadContact();\r\n    },\r\n    methods: {\r\n      loadContact() {\r\n        // Fetch the contact ID from the route parameters\r\n        const contactId = this.$route.params.id;\r\n        // Fetch all contacts from local storage\r\n        const contacts = fetchContacts();\r\n        // Find the specific contact by ID\r\n        this.contact = contacts.find(contact => contact.id.toString() === contactId);\r\n        // Handle case where contact is not found\r\n        if (!this.contact) {\r\n          alert('Contact not found!');\r\n          // Optionally, redirect back to the contact list\r\n          this.$router.push('/');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  "],"mappings":";gCAEIA,mBAAA,CAAwB,YAApB,iBAAe;;EAFvBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;gCAUMD,mBAAA,CAAsC,WAAnC,iCAA+B;oBAAlCE,UAAsC,C;;uBAT1CC,mBAAA,CAWM,cAVJC,UAAwB,EACxBC,mBAAA,yDAA4D,EACjDC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAIM,OARVK,UAAA,GAKMR,mBAAA,CAA+B,WAA5B,QAAM,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACG,IAAI,kBACxBV,mBAAA,CAAiC,WAA9B,SAAO,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACI,KAAK,kBAC1BN,mBAAA,yDAA4D,C,oBAE9DF,mBAAA,CAEM,OAXVS,UAAA,MAAAC,UAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}