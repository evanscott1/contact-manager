{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Contact Details\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Contact not found or loading...\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Options\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Test\", -1 /* HOISTED */);\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Only display contact details if contact is not null \"), $data.contact ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Name: \" + _toDisplayString($data.contact.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString($data.contact.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Address: \" + _toDisplayString($data.contact.address), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Phone: \" + _toDisplayString($data.contact.phone), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Category: \" + _toDisplayString($data.contact.category), 1 /* TEXT */), _createCommentVNode(\" Display other details like address, phone, category \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5])), _createElementVNode(\"div\", null, [_hoisted_6, _createCommentVNode(\" List contacts here \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.contacts, contact => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: contact.id\n    }, [_hoisted_7, _createTextVNode(\" \" + _toDisplayString(contact.name) + \" - \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteContact(contact.id)\n    }, \"Delete Contact\", 8 /* PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_4","_createElementBlock","_hoisted_1","_createCommentVNode","$data","contact","_hoisted_2","_toDisplayString","name","email","address","phone","category","_hoisted_3","_hoisted_5","_hoisted_6","_Fragment","_renderList","_ctx","contacts","id","_hoisted_7","_createTextVNode","onClick","$event","$options","deleteContact","_hoisted_8"],"sources":["C:\\Users\\regev\\contact-manager\\src\\components\\ContactDetails.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Contact Details</h1>\r\n    <!-- Only display contact details if contact is not null -->\r\n    <div v-if=\"contact\">\r\n      <p>Name: {{ contact.name }}</p>\r\n      <p>Email: {{ contact.email }}</p>\r\n      <p>Address: {{ contact.address }}</p>\r\n      <p>Phone: {{ contact.phone }}</p>\r\n      <p>Category: {{ contact.category }}</p>\r\n      <!-- Display other details like address, phone, category -->\r\n    </div>\r\n    <div v-else>\r\n      <p>Contact not found or loading...</p>\r\n    </div>\r\n    <div>\r\n      <h1>Options</h1>\r\n      <!-- List contacts here -->\r\n      <ul>\r\n        <li v-for=\"contact in contacts\" :key=\"contact.id\">\r\n          <p>Test</p>\r\n          {{ contact.name }} - <button @click=\"deleteContact(contact.id)\">Delete Contact</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  </template>\r\n\r\n  \r\n  <script>\r\n  import { fetchContacts, saveContacts } from '@/utils/storage'; // Adjust the path as necessary\r\n  \r\n  export default {\r\n    name: 'ContactDetails',\r\n    data() {\r\n      return {\r\n        contact: null // Initialize contact as null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.loadContact();\r\n    },\r\n    methods: {\r\n      loadContact() {\r\n        // Fetch the contact ID from the route parameters\r\n        const contactId = this.$route.params.id;\r\n        // Fetch all contacts from local storage\r\n        const contacts = fetchContacts();\r\n        // Find the specific contact by ID\r\n        this.contact = contacts.find(contact => contact.id.toString() === contactId);\r\n        // Handle case where contact is not found\r\n        if (!this.contact) {\r\n          alert('Contact not found!');\r\n          // Optionally, redirect back to the contact list\r\n          this.$router.push('/');\r\n        }\r\n      },\r\n      deleteContact(contactId) {\r\n        // Confirm before deleting\r\n        if (confirm(\"Are you sure you want to delete this contact?\")) {\r\n          // Filter out the contact to delete\r\n          const updatedContacts = this.contacts.filter(contact => contact.id !== contactId);\r\n          // Save the updated contacts list back to local storage\r\n          saveContacts(updatedContacts);\r\n          // Update the local contacts array to reflect the change\r\n          this.contacts = updatedContacts;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  "],"mappings":";gCAEIA,mBAAA,CAAwB,YAApB,iBAAe;;EAFvBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;gCAaMD,mBAAA,CAAsC,WAAnC,iCAA+B;oBAAlCE,UAAsC,C;gCAGtCF,mBAAA,CAAgB,YAAZ,SAAO;gCAIPA,mBAAA,CAAW,WAAR,MAAI;mBApBjB;;uBACEG,mBAAA,CAwBM,cAvBJC,UAAwB,EACxBC,mBAAA,yDAA4D,EACjDC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAOM,OAXVK,UAAA,GAKMR,mBAAA,CAA+B,WAA5B,QAAM,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACG,IAAI,kBACxBV,mBAAA,CAAiC,WAA9B,SAAO,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACI,KAAK,kBAC1BX,mBAAA,CAAqC,WAAlC,WAAS,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACK,OAAO,kBAC9BZ,mBAAA,CAAiC,WAA9B,SAAO,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACM,KAAK,kBAC1Bb,mBAAA,CAAuC,WAApC,YAAU,GAAAS,gBAAA,CAAGH,KAAA,CAAAC,OAAO,CAACO,QAAQ,kBAChCT,mBAAA,yDAA4D,C,oBAE9DF,mBAAA,CAEM,OAdVY,UAAA,MAAAC,UAAA,KAeIhB,mBAAA,CASM,cARJiB,UAAgB,EAChBZ,mBAAA,wBAA2B,EAC3BL,mBAAA,CAKK,c,kBAJHG,mBAAA,CAGKe,SAAA,QAtBbC,WAAA,CAmB8BC,IAAA,CAAAC,QAAQ,EAAnBd,OAAO;yBAAlBJ,mBAAA,CAGK;MAH4BF,GAAG,EAAEM,OAAO,CAACe;QAC5CC,UAAW,EApBrBC,gBAAA,CAoBqB,GACX,GAAAf,gBAAA,CAAGF,OAAO,CAACG,IAAI,IAAG,KAAG,iBAAAV,mBAAA,CAAkE;MAAzDyB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACrB,OAAO,CAACe,EAAE;OAAG,gBAAc,iBArBxFO,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}