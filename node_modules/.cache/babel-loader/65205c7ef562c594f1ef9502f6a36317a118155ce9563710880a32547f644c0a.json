{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Import the necessary functions from your storage utility\nimport { fetchContacts, saveContacts } from '@/utils/storage';\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      // Initialize the contacts array to be filled with the fetched contacts\n      contacts: []\n    };\n  },\n  created() {\n    // Load contacts from local storage when the component is created\n    this.contacts = fetchContacts();\n  },\n  methods: {\n    viewDetails(contactId) {\n      // Navigate to the ContactDetails view, passing the contact ID as a parameter\n      this.$router.push({\n        name: 'ContactDetails',\n        params: {\n          id: contactId\n        }\n      });\n    },\n    deleteContact(contactId) {\n      // Confirm before deleting\n      if (confirm(\"Are you sure you want to delete this contact?\")) {\n        // Filter out the contact to delete\n        const updatedContacts = this.contacts.filter(contact => contact.id !== contactId);\n        // Save the updated contacts list back to local storage\n        saveContacts(updatedContacts);\n        // Update the local contacts array to reflect the change\n        this.contacts = updatedContacts;\n      }\n    }\n  }\n};","map":{"version":3,"names":["fetchContacts","saveContacts","name","data","contacts","created","methods","viewDetails","contactId","$router","push","params","id","deleteContact","confirm","updatedContacts","filter","contact"],"sources":["C:\\Users\\regev\\contact-manager\\src\\components\\ContactList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Contact List</h1>\r\n      <!-- List contacts here -->\r\n      <ul>\r\n        <li v-for=\"contact in contacts\" :key=\"contact.id\">\r\n          {{ contact.name }} - <button @click=\"viewDetails(contact.id)\">View Details</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  // Import the necessary functions from your storage utility\r\n  import { fetchContacts, saveContacts } from '@/utils/storage';\r\n  \r\n  export default {\r\n    name: 'ContactList',\r\n    data() {\r\n      return {\r\n        // Initialize the contacts array to be filled with the fetched contacts\r\n        contacts: []\r\n      };\r\n    },\r\n    created() {\r\n      // Load contacts from local storage when the component is created\r\n      this.contacts = fetchContacts();\r\n    },\r\n    methods: {\r\n      viewDetails(contactId) {\r\n        // Navigate to the ContactDetails view, passing the contact ID as a parameter\r\n        this.$router.push({ name: 'ContactDetails', params: { id: contactId } });\r\n      },\r\n      deleteContact(contactId) {\r\n        // Confirm before deleting\r\n        if (confirm(\"Are you sure you want to delete this contact?\")) {\r\n          // Filter out the contact to delete\r\n          const updatedContacts = this.contacts.filter(contact => contact.id !== contactId);\r\n          // Save the updated contacts list back to local storage\r\n          saveContacts(updatedContacts);\r\n          // Update the local contacts array to reflect the change\r\n          this.contacts = updatedContacts;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  "],"mappings":";AAaE;AACA,SAASA,aAAa,EAAEC,YAAW,QAAS,iBAAiB;AAE7D,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,QAAO,GAAIJ,aAAa,CAAC,CAAC;EACjC,CAAC;EACDM,OAAO,EAAE;IACPC,WAAWA,CAACC,SAAS,EAAE;MACrB;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAER,IAAI,EAAE,gBAAgB;QAAES,MAAM,EAAE;UAAEC,EAAE,EAAEJ;QAAU;MAAE,CAAC,CAAC;IAC1E,CAAC;IACDK,aAAaA,CAACL,SAAS,EAAE;MACvB;MACA,IAAIM,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5D;QACA,MAAMC,eAAc,GAAI,IAAI,CAACX,QAAQ,CAACY,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACL,EAAC,KAAMJ,SAAS,CAAC;QACjF;QACAP,YAAY,CAACc,eAAe,CAAC;QAC7B;QACA,IAAI,CAACX,QAAO,GAAIW,eAAe;MACjC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}